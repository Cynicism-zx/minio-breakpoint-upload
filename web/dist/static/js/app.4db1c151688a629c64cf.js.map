{"version":3,"sources":["webpack:///src/App.vue","webpack:///./src/App.vue?7ae9","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./node_modules/.pnpm/registry.npmmirror.com+axios@0.21.4/node_modules/axios/package.json"],"names":["md5ChunkSize","chunkSize","App","data","options","target","fileParameterName","maxChunkRetries","testChunks","checkChunkUploadedByResponse","chunk","response_msg","objMessage","JSON","parse","skipUpload","uploadedChunks","indexOf","offset","attrs","accept","progress","status","urlPrex","fileStatusText","success","error","uploading","paused","waiting","created","mounted","_this","this","$nextTick","window","uploader","$refs","methods","onFileAdded","file","console","log","computeMD5","onFileSuccess","rootFile","response","modelEvaluationId","modelData","id","refProjectId","$store","dispatch","then","responseData","code","catch","onFileError","onFileProgress","getSuccessChunks","promise_default","a","resolve","reject","axios_default","get","params","md5","uniqueIdentifier","uploadID","uuid","uploaded","chunks","newMultiUpload","totalChunkCounts","size","fileName","name","multipartUpload","_ref","_ref2","_this2","uploadMinioNew","asyncToGenerator_default","regenerator_default","mark","_callee","url","e","xhr","etagValue","wrap","_context","prev","next","XMLHttpRequest","open","setRequestHeader","send","result","getResponseHeader","etags","currentChunk","stop","_x","_x2","apply","arguments","uploadChunk","_callee2","start","partSize","_context2","checkSuccessChunks","getUploadChunkUrl","urls","updateChunk","abrupt","_x3","blobSlice","File","prototype","slice","mozSlice","webkitSlice","Math","ceil","fileReader","FileReader","time","Date","getTime","loadNext","end","readAsArrayBuffer","call","successChunks","toString","chunkNumber","post","lib_default","stringify","etag","Array","successParts","split","i","length","_ref3","onload","_callee3","_context3","abort","file_name","_x4","_this3","spark","spark_md5_default","ArrayBuffer","loadMd5Next","append","destroy","cmd5","computeMD5Success","onerror","warn","cancel","_this4","_callee4","_context4","selectortype_template_index_0_src_App","render","_vm","_h","$createElement","_c","_self","ref","staticClass","autoStart","file-status-text","on","file-added","file-success","file-progress","file-error","_v","_s","staticRenderFns","src_App","__webpack_require__","normalizeComponent","ssrContext","Vue","use","createElement","$mount","module","exports","version","description","main","scripts","test","build","preversion","postversion","examples","coveralls","fix","repository","type","keywords","author","license","bugs","homepage","devDependencies","es6-promise","grunt","grunt-banner","grunt-cli","grunt-contrib-clean","grunt-contrib-watch","grunt-eslint","grunt-karma","grunt-mocha-test","grunt-ts","grunt-webpack","istanbul-instrumenter-loader","jasmine-core","karma","karma-chrome-launcher","karma-firefox-launcher","karma-jasmine","karma-jasmine-ajax","karma-safari-launcher","karma-sauce-launcher","karma-sinon","karma-sourcemap-loader","karma-webpack","load-grunt-tasks","minimist","mocha","sinon","terser-webpack-plugin","typescript","url-search-params","webpack","webpack-dev-server","browser","./lib/adapters/http.js","jsdelivr","unpkg","typings","dependencies","follow-redirects","bundlesize","path","threshold"],"mappings":"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","file":"static/js/app.4db1c151688a629c64cf.js","sourcesContent":["<template>\n  <uploader\n    ref=\"uploader\"\n    :options=\"options\"\n    :autoStart=\"true\"\n    :file-status-text=\"fileStatusText\"\n    @file-added=\"onFileAdded\"\n    @file-success=\"onFileSuccess\"\n    @file-progress=\"onFileProgress\"\n    @file-error=\"onFileError\"\n    class=\"uploader-example\"\n  >\n    <uploader-unsupport></uploader-unsupport>\n    <uploader-drop>\n      <div>\n        <p>将文件拖放到此处以上传或</p>\n\n        <uploader-btn id=\"global-uploader-btn\" :attrs=\"attrs\" ref=\"uploadBtn\"\n          >选择文件<i class=\"el-icon-upload el-icon--right\"></i\n        ></uploader-btn>\n      </div>\n    </uploader-drop>\n    <uploader-list></uploader-list>\n    <p>文件处理状态：{{ status }}</p>\n    <p>文件上传进度：{{ progress }}%</p>\n  </uploader>\n</template>\n\n<script>\nimport SparkMD5 from \"spark-md5\";\nimport axios from \"axios\";\nimport qs from \"qs\";\n\nconst md5ChunkSize = 1024 * 1024 * 1;\nconst chunkSize = 1024 * 1024 * 1;\n\nexport default {\n  data() {\n    return {\n      options: {\n        //目标上传 URL，默认POST\n        target: \"\",\n        //分块大小(单位：字节)\n        chunkSize: 1024 * 1024 * 1,\n        //上传文件时文件内容的参数名，对应chunk里的Multipart对象名，默认对象名为file\n        fileParameterName: \"upfile\",\n        //失败后最多自动重试上传次数\n        maxChunkRetries: 3,\n        //是否开启服务器分片校验，对应GET类型同名的target URL\n        testChunks: true,\n        checkChunkUploadedByResponse: function(chunk, response_msg) {\n          let objMessage = JSON.parse(response_msg);\n          if (objMessage.skipUpload) {\n            return true;\n          }\n          return (\n            (objMessage.uploadedChunks || []).indexOf(chunk.offset + 1) >= 0\n          );\n        }\n      },\n      attrs: {\n        accept: []\n      },\n      progress: 0,\n      status: \"初始状态\",\n      urlPrex: \"http://127.0.0.1:39988/minio\",\n      fileStatusText: {\n        success: \"上传成功\",\n        error: \"上传失败\",\n        uploading: \"上传中\",\n        paused: \"暂停\",\n        waiting: \"等待上传\"\n      }\n    };\n  },\n  created() {\n    //const uploaderInstance = this.$refs.uploader;\n  },\n  mounted() {\n    this.$nextTick(() => {\n      window.uploader = this.$refs.uploader.uploader;\n    });\n  },\n  methods: {\n    onFileAdded(file) {\n      console.log(file);\n      this.computeMD5(file);\n    },\n\n    onFileSuccess(rootFile, file, response, chunk) {\n      console.log(file);\n      //refProjectId为预留字段，可关联附件所属目标，例如所属档案，所属工程等\n      file.modelEvaluationId = this.modelData.id;\n      file.refProjectId = \"123456789\";\n      this.$store\n        .dispatch(\"mergeFile\", file)\n        .then(responseData => {\n          if (responseData.data.code === 415) {\n            console.log(\"合并操作未成功，结果码：\" + responseData.data.code);\n          }\n        })\n        .catch(function(error) {\n          console.log(\"合并后捕获的未知异常：\" + error);\n        });\n    },\n    onFileError(rootFile, file, response, chunk) {\n      console.log(\"上传完成后异常信息：\" + response);\n    },\n\n    onFileProgress(rootFile, file, chunk) {\n      console.log(file);\n    },\n\n    getSuccessChunks(file) {\n      return new Promise((resolve, reject) => {\n        axios\n          .get(\"http://192.168.2.26:39988/minio\" + \"/get_chunks\", {\n            params: {\n              md5: file.uniqueIdentifier\n            }\n          })\n          .then(function(response) {\n            file.uploadID = response.data.uploadID;\n            file.uuid = response.data.uuid;\n            file.uploaded = response.data.uploaded;\n            file.chunks = response.data.chunks;\n            resolve(response);\n          })\n          .catch(function(error) {\n            reject(error);\n          });\n      });\n    },\n    newMultiUpload(file) {\n      console.log(file, \"new_multipart\");\n      return new Promise((resolve, reject) => {\n        axios\n          .get(\"http://192.168.2.26:39988/minio\" + \"/new_multipart\", {\n            params: {\n              totalChunkCounts: file.totalChunkCounts,\n              md5: file.uniqueIdentifier,\n              size: file.size,\n              fileName: file.name\n            }\n          })\n          .then(function(response) {\n            file.uploadID = response.data.uploadID;\n            file.uuid = response.data.uuid;\n            resolve(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n            reject(error);\n          });\n      });\n    },\n    multipartUpload(file) {\n      let blobSlice =\n          File.prototype.slice ||\n          File.prototype.mozSlice ||\n          File.prototype.webkitSlice,\n        chunks = Math.ceil(file.size / chunkSize),\n        currentChunk = 0,\n        fileReader = new FileReader(),\n        time = new Date().getTime();\n\n      function loadNext() {\n        let start = currentChunk * chunkSize;\n        let end =\n          start + chunkSize >= file.size ? file.size : start + chunkSize;\n\n        fileReader.readAsArrayBuffer(blobSlice.call(file.file, start, end));\n      }\n\n      function checkSuccessChunks() {\n        var index = successChunks.indexOf((currentChunk + 1).toString());\n        if (index == -1) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function getUploadChunkUrl(currentChunk, partSize) {\n        return new Promise((resolve, reject) => {\n          axios\n            .get(\"http://192.168.2.26:39988/minio\" + \"/get_multipart_url\", {\n              params: {\n                uuid: file.uuid,\n                uploadID: file.uploadID,\n                size: partSize,\n                chunkNumber: currentChunk + 1\n              }\n            })\n            .then(function(response) {\n              urls[currentChunk] = response.data.url;\n              resolve(response);\n            })\n            .catch(function(error) {\n              console.log(error);\n              reject(error);\n            });\n        });\n      }\n\n      function uploadMinio(url, e) {\n        return new Promise((resolve, reject) => {\n          axios\n            .put(url, e.target.result)\n            .then(function(res) {\n              etags[currentChunk] = res.headers.etag;\n              resolve(res);\n            })\n            .catch(function(err) {\n              console.log(err);\n              reject(err);\n            });\n        });\n      }\n\n      async function uploadMinioNew(url, e) {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"PUT\", url, false);\n        xhr.setRequestHeader(\"Content-Type\", \"text/plain\");\n        xhr.send(e.target.result);\n        var etagValue = xhr.getResponseHeader(\"etag\");\n        etags[currentChunk] = etagValue;\n      }\n\n      function updateChunk(currentChunk) {\n        return new Promise((resolve, reject) => {\n          axios\n            .post(\n              \"http://192.168.2.26:39988/minio\" + \"/update_chunk\",\n              qs.stringify({\n                uuid: file.uuid,\n                chunkNumber: currentChunk + 1,\n                etag: etags[currentChunk]\n              })\n            )\n            .then(function(response) {\n              console.log(\"11111111111111111111111\");\n              resolve(response);\n            })\n            .catch(function(error) {\n              console.log(error);\n              reject(error);\n            });\n        });\n      }\n\n      async function uploadChunk(e) {\n        if (!checkSuccessChunks()) {\n          let start = currentChunk * chunkSize;\n          let partSize =\n            start + chunkSize >= file.size ? file.size - start : chunkSize;\n\n          //获取分片上传url\n          await getUploadChunkUrl(currentChunk, partSize);\n          if (urls[currentChunk] != \"\") {\n            //上传到minio\n            await uploadMinioNew(urls[currentChunk], e);\n            if (etags[currentChunk] != \"\") {\n              //更新数据库：分片上传结果\n              await updateChunk(currentChunk);\n            } else {\n              return;\n            }\n          } else {\n            return;\n          }\n        }\n      }\n\n      function completeUpload() {\n        return new Promise((resolve, reject) => {\n          axios\n            .post(\n              \"http://192.168.2.26:39988/minio\" + \"/complete_multipart\",\n              qs.stringify({\n                uuid: file.uuid,\n                uploadID: file.uploadID,\n                file_name: file.name,\n                size: file.size\n              })\n            )\n            .then(function(response) {\n              resolve(response);\n            })\n            .catch(function(error) {\n              console.log(error);\n              reject(error);\n            });\n        });\n      }\n\n      var successChunks = new Array();\n      var successParts = new Array();\n      successParts = file.chunks.split(\",\");\n      for (let i = 0; i < successParts.length; i++) {\n        successChunks[i] = successParts[i].split(\"-\")[0];\n      }\n\n      var urls = new Array();\n      var etags = new Array();\n\n      console.log(\"上传分片...\");\n      this.status = \"上传中\";\n\n      {\n        loadNext();\n        fileReader.onload = async e => {\n          await uploadChunk(e);\n          fileReader.abort();\n          currentChunk++;\n\n          if (currentChunk < chunks) {\n            console.log(\n              `第${currentChunk}个分片上传完成, 开始第${currentChunk +\n                1}/${chunks}个分片上传`\n            );\n            this.progress = Math.ceil((currentChunk / chunks) * 100);\n            await loadNext();\n          } else {\n            await completeUpload();\n            console.log(\n              `文件上传完成：${file.name} \\n分片：${chunks} 大小:${\n                file.size\n              } 用时：${(new Date().getTime() - time) / 1000} s`\n            );\n            this.progress = 100;\n            this.status = \"上传完成\";\n            //window.location.reload();\n          }\n        };\n      }\n    },\n    //计算MD5\n    computeMD5(file) {\n      let blobSlice =\n          File.prototype.slice ||\n          File.prototype.mozSlice ||\n          File.prototype.webkitSlice,\n        chunks = Math.ceil(file.size / chunkSize),\n        currentChunk = 0,\n        spark = new SparkMD5.ArrayBuffer(),\n        fileReader = new FileReader();\n\n      let time = new Date().getTime();\n\n      console.log(\"计算MD5...\");\n      this.status = \"计算MD5\";\n      file.totalChunkCounts = chunks;\n\n      loadMd5Next();\n      fileReader.onload = e => {\n        spark.append(e.target.result); // Append array buffer\n        currentChunk++;\n\n        if (currentChunk < chunks) {\n          console.log(\n            `第${currentChunk}分片解析完成, 开始第${currentChunk +\n              1}/${chunks}分片解析`\n          );\n          loadMd5Next();\n        } else {\n          let md5 = spark.end();\n          console.log(\n            `MD5计算完成：${file.name} \\nMD5：${md5} \\n分片：${chunks} 大小:${\n              file.size\n            } 用时：${(new Date().getTime() - time) / 1000} s`\n          );\n          spark.destroy(); //释放缓存\n          file.uniqueIdentifier = md5; //将文件md5赋值给文件唯一标识\n          file.cmd5 = false; //取消计算md5状态\n\n          this.computeMD5Success(file);\n        }\n      };\n\n      fileReader.onerror = () => {\n        console.warn(\"oops, something went wrong.\");\n        file.cancel();\n      };\n\n      function loadMd5Next() {\n        let start = currentChunk * chunkSize;\n        let end =\n          start + md5ChunkSize >= file.size ? file.size : start + md5ChunkSize;\n\n        fileReader.readAsArrayBuffer(blobSlice.call(file.file, start, end));\n      }\n    },\n\n    async computeMD5Success(file) {\n      await this.getSuccessChunks(file);\n\n      if (file.uploadID == \"\" || file.uuid == \"\") {\n        //未上传过\n        await this.newMultiUpload(file);\n        if (file.uploadID != \"\" && file.uuid != \"\") {\n          file.chunks = \"\";\n          this.multipartUpload(file);\n        } else {\n          //失败如何处理\n          return;\n        }\n      } else {\n        if (file.uploaded == \"1\") {\n          //已上传成功\n          //秒传\n          console.log(\"文件已上传完成\");\n          this.progress = 100;\n          this.status = \"上传完成\";\n\n          //window.location.reload();\n        } else {\n          //断点续传\n          this.multipartUpload(file);\n        }\n      }\n\n      function addAttachment(file) {\n        return new Promise((resolve, reject) => {\n          axios\n            .post(\n              \"http://192.168.2.26:39988/minio\" + \"/add\",\n              qs.stringify({\n                uuid: file.uuid,\n                file_name: file.name,\n                size: file.size\n              })\n            )\n            .then(function(response) {\n              resolve(response);\n            })\n            .catch(function(error) {\n              console.log(error);\n              reject(error);\n            });\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.uploader-app {\n  width: 850px;\n  padding: 15px;\n  margin: 40px auto 0;\n  font-size: 12px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n}\n.uploader-app .uploader-btn {\n  margin-right: 40px;\n}\n.uploader-app .uploader-list {\n  max-height: 440px;\n  overflow: auto;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('uploader',{ref:\"uploader\",staticClass:\"uploader-example\",attrs:{\"options\":_vm.options,\"autoStart\":true,\"file-status-text\":_vm.fileStatusText},on:{\"file-added\":_vm.onFileAdded,\"file-success\":_vm.onFileSuccess,\"file-progress\":_vm.onFileProgress,\"file-error\":_vm.onFileError}},[_c('uploader-unsupport'),_vm._v(\" \"),_c('uploader-drop',[_c('div',[_c('p',[_vm._v(\"将文件拖放到此处以上传或\")]),_vm._v(\" \"),_c('uploader-btn',{ref:\"uploadBtn\",attrs:{\"id\":\"global-uploader-btn\",\"attrs\":_vm.attrs}},[_vm._v(\"选择文件\"),_c('i',{staticClass:\"el-icon-upload el-icon--right\"})])],1)]),_vm._v(\" \"),_c('uploader-list'),_vm._v(\" \"),_c('p',[_vm._v(\"文件处理状态：\"+_vm._s(_vm.status))]),_vm._v(\" \"),_c('p',[_vm._v(\"文件上传进度：\"+_vm._s(_vm.progress)+\"%\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a75fe250\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/.pnpm/registry.npmmirror.com+extract-text-webpack-plugin@3.0.2_webpack@3.12.0/node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a75fe250\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a75fe250\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@13.7.3_krlkgggcd4gw5zlxktysnnpvsm/node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport uploader from 'vue-simple-uploader'\nimport App from './App.vue'\n\nVue.use(uploader)\n\n/* eslint-disable no-new */\nnew Vue({\n  render(createElement) {\n    return createElement(App)\n  }\n}).$mount('#uploader')\n\n\n/*new Vue({\n  el: '#uploader',\n  components: { App },\n  template: '<App/>'\n});\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\"name\":\"axios\",\"version\":\"0.21.4\",\"description\":\"Promise based HTTP client for the browser and node.js\",\"main\":\"index.js\",\"scripts\":{\"test\":\"grunt test\",\"start\":\"node ./sandbox/server.js\",\"build\":\"NODE_ENV=production grunt build\",\"preversion\":\"npm test\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\",\"postversion\":\"git push && git push --tags\",\"examples\":\"node ./examples/server.js\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"fix\":\"eslint --fix lib/**/*.js\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/axios/axios.git\"},\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"author\":\"Matt Zabriskie\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"homepage\":\"https://axios-http.com\",\"devDependencies\":{\"coveralls\":\"^3.0.0\",\"es6-promise\":\"^4.2.4\",\"grunt\":\"^1.3.0\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.1.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^23.0.0\",\"grunt-karma\":\"^4.0.0\",\"grunt-mocha-test\":\"^0.13.3\",\"grunt-ts\":\"^6.0.0-beta.19\",\"grunt-webpack\":\"^4.0.2\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^6.3.2\",\"karma-chrome-launcher\":\"^3.1.0\",\"karma-firefox-launcher\":\"^2.1.0\",\"karma-jasmine\":\"^1.1.1\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^4.3.6\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.8\",\"karma-webpack\":\"^4.0.2\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"mocha\":\"^8.2.1\",\"sinon\":\"^4.5.0\",\"terser-webpack-plugin\":\"^4.2.3\",\"typescript\":\"^4.0.5\",\"url-search-params\":\"^0.10.0\",\"webpack\":\"^4.44.2\",\"webpack-dev-server\":\"^3.11.0\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"jsdelivr\":\"dist/axios.min.js\",\"unpkg\":\"dist/axios.min.js\",\"typings\":\"./index.d.ts\",\"dependencies\":{\"follow-redirects\":\"^1.14.0\"},\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.pnpm/registry.npmmirror.com+axios@0.21.4/node_modules/axios/package.json\n// module id = gm86\n// module chunks = 1"],"sourceRoot":""}